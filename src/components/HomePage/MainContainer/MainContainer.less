// 项目卡片的布局
.context-container{
	// display: flex;
	// flex-direction: row;
	// gap: 2rem;
	// overflow: auto;
	// place-items: center; //flex 内元素全部居中	
	// float: left;
	overflow: auto;
	height: 100%;
	display: grid;
    grid-template-columns: 1fr 1fr 1fr;
	width: 100%;
	grid-gap:1rem 1rem;  //行间距 列间距
	transition: all 0.3s ease-in-out;
}


// 响应式布局
// @media screen and (max-width: 1680px) {
// 	.context-container{
// 		display: grid;
// 		grid-template-columns: repeat(auto-fit, minmax(420px, 1fr)); //🔥🔥repeat(3, 100px) 表示每个 100px，自适应 3 列， auto-fit 表示自适应数量, minmax(320px, 1fr) 表示最小 320px，最大 1fr， 可以实现完美的自适应宽度
// 		grid-template-rows: repeat(3, auto-fit);
// 		grid-gap:1rem 1rem;  //行间距 列间距
// 	}
// }

// 响应式布局
@media screen and (max-width: 1440px) {
	.context-container{
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(420px, 1fr)); //🔥🔥repeat(3, 100px) 表示每个 100px，自适应 3 列， auto-fit 表示自适应数量, minmax(320px, 1fr) 表示最小 320px，最大 1fr， 可以实现完美的自适应宽度
		grid-template-rows: repeat(3, auto-fit);
		grid-gap:1rem 1rem;  //行间距 列间距
	}
}

@media screen and (max-width: 960px) {
	.context-container{
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); //🔥🔥repeat(3, 100px) 表示每个 100px，自适应 3 列， auto-fit 表示自适应数量, minmax(320px, 1fr) 表示最小 320px，最大 1fr， 可以实现完美的自适应宽度
		grid-template-rows: repeat(3, auto-fit);
		grid-gap:1rem 1rem;  //行间距 列间距
	}
}

@media screen and (max-width: 640px) {
	.context-container{
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); //🔥🔥repeat(3, 100px) 表示每个 100px，自适应 3 列， auto-fit 表示自适应数量, minmax(320px, 1fr) 表示最小 320px，最大 1fr， 可以实现完美的自适应宽度
		grid-template-rows: repeat(1, auto-fit);
		grid-gap:1rem 1rem;  //行间距 列间距
	}
}
